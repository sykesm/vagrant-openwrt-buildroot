diff -uNr orig/main.c new/main.c
--- orig/main.c	2014-02-18 11:17:30.000000000 -0500
+++ new/main.c	2014-05-27 17:18:48.000000000 -0400
@@ -146,6 +146,7 @@
	OPT_NO_XMLPOST,
	OPT_PIDFILE,
	OPT_PASSWORD_ON_STDIN,
+	OPT_PASSWORD_FILE,
	OPT_PRINTCOOKIE,
	OPT_RECONNECT_TIMEOUT,
	OPT_SERVERCERT,
@@ -211,6 +212,7 @@
	OPTION("xmlconfig", 1, 'x'),
	OPTION("cookie-on-stdin", 0, OPT_COOKIE_ON_STDIN),
	OPTION("passwd-on-stdin", 0, OPT_PASSWORD_ON_STDIN),
+ 	OPTION("passwd-file", 1, OPT_PASSWORD_FILE),
	OPTION("no-passwd", 0, OPT_NO_PASSWD),
	OPTION("reconnect-timeout", 1, OPT_RECONNECT_TIMEOUT),
	OPTION("dtls-ciphers", 1, OPT_DTLS_CIPHERS),
@@ -384,6 +386,7 @@
	printf("      --no-xmlpost                %s\n", _("Do not attempt XML POST authentication"));
	printf("      --non-inter                 %s\n", _("Do not expect user input; exit if it is required"));
	printf("      --passwd-on-stdin           %s\n", _("Read password from standard input"));
+	printf("      --passwd-file=FILE          %s\n", _("Read password from a file"));
	printf("      --token-mode=MODE           %s\n", _("Software token type: rsa, totp or hotp"));
	printf("      --token-secret=STRING       %s\n", _("Software token secret"));
 #ifndef HAVE_LIBSTOKEN
@@ -442,6 +445,35 @@
		*c = 0;
 }

+static void read_file(const char *filename, char **string)
+{
+	char *c = malloc(1025), *ret;
+
+	if (!c) {
+		fprintf(stderr, _("Allocation failure for string from %s\n"), filename);
+		exit(1);
+	}
+
+	FILE *f = fopen(filename, "r");
+
+	if (!f) {
+		fprintf(stderr, _("Failed to open file %s\n"), filename);
+	}
+
+	ret = fgets(c, 1025, f);
+
+	if (!ret) {
+		perror(_("fgets"));
+		exit(1);
+	}
+
+	*string = c;
+
+	c = strchr(*string, '\n');
+	if (c)
+		*c = 0;
+}
+
 static int sig_cmd_fd;
 #ifndef _WIN32
 static int sig_caught;
@@ -701,6 +733,9 @@
		case OPT_PASSWORD_ON_STDIN:
			read_stdin(&password, 0);
			break;
+		case OPT_PASSWORD_FILE:
+			read_file(optarg, &password);
+			break;
		case OPT_NO_PASSWD:
			vpninfo->nopasswd = 1;
			break;
